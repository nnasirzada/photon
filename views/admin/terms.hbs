<!-- Header -->
<h3 class="uk-heading-bullet">Terms</h3>

<!-- Table -->
<table id="table" class="uk-table uk-table-hover uk-table-striped" style="width: 100%;">
	<thead>
		<tr>
			<th>Year</th>
			<th>Season</th>
			<th>Start Date</th>
			<th>End Date</th>
			<th>Name</th>
			<th>Status</th>
			<th class="dt-right">Options</th>
		</tr>
	</thead>
</table>

<!-- Create / Edit Modal -->
<div id="modal-create-edit" bg-close="false" uk-modal>
	<div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical">
		<form id="form" method action class="uk-form-stacked uk-width-1-1 ui-front">
			<h2 class="uk-modal-title"></h2>
			<input name="id" type="hidden" value>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="year">Year</label>
				<select class="uk-select" name="year" id="year">
				</select>
			</div>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="season">Season</label>
				<select class="uk-select" name="season" id="season">
					<option value="spring">Spring</option>
					<option value="summer">Summer</option>
					<option value="fall">Fall</option>
					<option value="other">Other</option>
				</select>
			</div>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="start_date">Start Date</label>
				<div class="uk-form-controls">
					<input style="cursor: pointer;" class="uk-input" type="text" name="start_date" id="start_date" placeholder="Start Date" readonly="readonly">
				</div>
			</div>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="end_date">End Date</label>
				<div class="uk-form-controls">
					<input style="cursor: pointer;" class="uk-input" type="text" name="end_date" id="end_date" placeholder="End Date" readonly="readonly">
				</div>
			</div>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="name">Name</label>
				<input class="uk-input" type="text" name="name" id="name" placeholder="Name" required>
			</div>
			<div class="uk-margin uk-width-1-1">
				<label class="uk-form-label" for="status">Status</label>
				<select class="uk-select" name="status" id="status">
					<option value="hidden">Hidden</option>
					<option value="view only">View only</option>
					<option value="open">Open</option>
				</select>
			</div>
			<div class="uk-margin-top uk-text-right">
				<button class="uk-button uk-button-default uk-modal-close" type="button">Close</button>
				<div class="spinner" style="display: none;">
					<span class="uk-label uk-margin-right">Processing...</span>
					<div uk-spinner></div>
				</div>
				<input type="submit" class="uk-margin-left uk-button uk-button-primary" value="Save">
			</div>
		</form>
	</div>
</div>

<!-- Delete Modal -->
<div id="modal-delete" bg-close="false" uk-modal>
	<div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical">
		<form method="delete" action class="uk-width-1-1">
			<h2 class="uk-modal-title">Are you sure you want to delete this term?</h2>
			<input name="id" type="hidden" value>
			<div class="uk-margin-top uk-text-right">
				<button class="uk-button uk-button-default uk-modal-close" type="button">Close</button>
				<div class="spinner" style="display: none;">
					<span class="uk-label uk-margin-right">Processing...</span>
					<div uk-spinner></div>
				</div>
				<input type="submit" class="uk-margin-left uk-button uk-button-primary" value="Delete">
			</div>
		</form>
	</div>
</div>

<!-- Scripts -->
<script>
	for (year = (new Date()).getFullYear() + 1; year >= 2010; year--) {
		$("#year").append($("<option />").val(year).text(year));
	}
	$("#start_date").datepicker({
		container: '#form',
		dateFormat: 'yy-mm-dd',
		onClose: function (selectedDate) {
			if (selectedDate) $("#end_date").datepicker("option", "minDate", selectedDate);
		}
	});
	$("#end_date").datepicker({
		dateFormat: 'yy-mm-dd',
		onClose: function (selectedDate) {
			if (selectedDate) $("#start_date").datepicker("option", "maxDate", selectedDate);
		}
	});
	function showSpinner(modal, show) {
		modal.find(".spinner").toggle(!!show);
		modal.find(".uk-modal-close").toggle(!show);
		modal.find("input[type='submit']").toggle(!show);
	}
	$(document).ready(function () {
		var table = $('#table').DataTable({
			dom: 'Bfrtip',
			responsive: {
				details: {
					display: $.fn.dataTable.Responsive.display.childRowImmediate
				}
			},
			buttons: [
				{
					text: 'New',
					action: function (e, dt) {
						$('#modal-create-edit form')[0].reset();
						$('#modal-create-edit form').find(':input').not(':submit, select').removeAttr('value');
						$('#modal-create-edit form').find('textarea').html(null);
						$("#modal-create-edit form").attr("action", "#");
						$("#modal-create-edit form").attr("method", "post");
						$("#year").val((new Date()).getFullYear()).change();
						$("#modal-create-edit .uk-modal-title").html("New term");
						showSpinner($("#modal-create-edit"), false);
						UIkit.modal("#modal-create-edit").show();
					}
				},
				{
					extend: 'selectedSingle',
					text: 'Edit',
					action: function (e, dt) {
						var data = dt.rows({ selected: true }).data();
						if (data.length != 1) return;
						var row = data[0];
						$('#modal-create-edit form')[0].reset();
						$('#modal-create-edit form').find(':input').not(':submit, select').removeAttr('value');
						$('#modal-create-edit form').find('textarea').html(null);
						$("#modal-create-edit form").attr("action", row.id);
						$("#modal-create-edit form").attr("method", "put");
						$("#modal-create-edit input[name='id']").attr("value", row.id);
						$("#modal-create-edit select[name='year']").val(row.year).change();
						$("#modal-create-edit select[name='season']").val(row.season).change();
						$("#modal-create-edit input[name='start_date']").attr("value", row.start_date);
						$("#modal-create-edit input[name='end_date']").attr("value", row.end_date);
						$("#modal-create-edit input[name='name']").attr("value", row.name);
						$("#modal-create-edit select[name='status']").val(row.status).change();
						$("#modal-create-edit .uk-modal-title").html("Edit term");
						showSpinner($("#modal-create-edit"), false);
						UIkit.modal("#modal-create-edit").show();
					}
				},
				{
					extend: 'selectedSingle',
					text: 'Delete',
					action: function (e, dt) {
						var data = dt.rows({ selected: true }).data();
						if (data.length != 1) return;
						var row = data[0];
						$('#modal-delete form')[0].reset();
						$("#modal-delete form").attr("action", row.id);
						$("#modal-delete input[name='id']").attr("value", row.id);
						showSpinner($("#modal-delete"), false);
						UIkit.modal("#modal-delete").show();
					}
				},
				'copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5', 'colvis'
			],
			select: { style: 'multi', selector: 'td:not(.not-selectable)' },
			ajax: "all",
			rowId: 'id',
			columns: [
				{ data: "year" },
				{ data: "season" },
				{ data: "start_date" },
				{ data: "end_date" },
				{ data: "name" },
				{ data: "status" },
				{
					data: "id",
					className: "dt-right not-selectable",
					sortable: false,
					render: function (data) {
						return "<a href=\"" + data + "/parts/\">View parts</a>";
					}
				}
			]
		});
		$("#modal-create-edit form").submit(function (e) {
			e.preventDefault();
			showSpinner($("#modal-create-edit"), true);
			$.ajax({
				type: $(this).attr('method'),
				url: $(this).attr('action'),
				dataType: 'json',
				data: $(this).serialize(),
				success: function (data) {
					let id = $("#modal-create-edit input[name='id']").val();
					if (id) {
						table.row("#" + id).data(data).draw();
					} else {
						table.row.add(data).draw();
					}
					UIkit.modal("#modal-create-edit").hide();
				},
				error: function (data) {
					UIkit.notification({
						message: data.responseText,
						status: 'danger',
						timeout: 1000
					});
					showSpinner($("#modal-create-edit"), false);
				}
			});
		});
		$("#modal-delete form").submit(function (e) {
			e.preventDefault();
			showSpinner($("#modal-delete"), true);
			$.ajax({
				type: $(this).attr('method'),
				url: $(this).attr('action'),
				data: $(this).serialize(),
				success: function (data) {
					let id = $("#modal-delete input[name='id']").val();
					table.row("#" + id).remove().draw();
					UIkit.modal("#modal-delete").hide();
				},
				error: function (data) {
					UIkit.notification({
						message: data.responseText,
						status: 'danger',
						timeout: 1000
					});
					showSpinner($("#modal-delete"), false);
				}
			});
		});
	});
</script>